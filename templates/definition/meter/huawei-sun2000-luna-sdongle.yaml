template: huawei-sun2000-luna-sdongle
covers:
  - huawei-dongle-powersensor
  - huawei-sun2000-rs485
products:
  - brand: Huawei
    description:
      generic: SUN2000 + Luna2000
capabilities:
  - battery-control
requirements:
  description:
    de: |
      Netz und Batterie erfordern den PowerSensor.
      "Modbus/TCP" erfordert die Freischaltung über den "Errichterzugang" in den Kommunikationseinstellungen des Wechselrichters. 
      Siehe https://forum.huawei.com/enterprise/en/modbus-tcp-guide/thread/667250677153415168-667213868771979264

      Um Netzladen zu aktivieren, muss zunächst ein Zeitfenster in der Fusion Solar App oder im Web erstellt werden. Gehen Sie wie folgt vor:
      1. Gehe zu "Geräte" -> "Dongle-XXX" -> "Parametereinstellungen" 
      2. Setze "Arbeitsmodus" auf Zeitsteuerung.
      3. Erstelle ein Zeitfenster von 00:00 - 23:59 – Laden – Wiederholen "täglich".
      4. Bestätige die Einstellungen.
      5. Nach der Übernahme den Arbeitsmodus wieder auf "Maximaler Eigenverbrauch" zurückstellen und bestätigen.
    en: |
      Grid and battery require the PowerSensor.
      "Modbus/TCP" requires activation via "Installer Access" in the communication settings of the inverter. 
      See https://forum.huawei.com/enterprise/en/modbus-tcp-guide/thread/667250677153415168-667213868771979264

      To enable grid charging, a time window must first be created in the Fusion Solar app or web interface. Proceed as follows:
      1. Go to "Devices" -> "Dongle-XXX" -> "Parameter Settings" 
      2. Set "Operating Mode" to Time Control.
      3. Create a time window from 00:00 - 23:59 – Charge – Repeat "Daily".
      4. Confirm the settings.
      5. Once applied, switch the operating mode back to "Maximum Self-Consumption" and confirm.

params:
  - name: usage
    choice:
      - grid
      - pv
      - battery
    allinone: true
  - name: modbus
    choice:
      - rs485
      - tcpip
  - name: timeout
    default: 15s
  - name: storageunit
    type: int
    default: 1
    advanced: true
  - name: maxdischargepower
    default: 2500 # W
    description:
      de: Maximale Entladeleistung im Normalbetrieb
    help:
      de: Maximale Leistung, welche die Luna im Normalbetrieb abgeben kann. (2500W default für 5kWh Speicher)
  - name: powerfromgrid
    default: 2500 # W
    description:
      de: Ladeleistung vom AC-Netz. (2500W default)
    help:
      de: Maximale Leistung, welche vom Netz gezogen werden darf.
  - name: capacity
    advanced: true
  - name: holdaccharging
    default: true
    advanced: true
    type: bool
    description:
      en: Inverter cascade
      de: Wechselrichterkaskade
    help:
      en: Keep AC charging active to charge the storage from other inverters via AC. Prevents stand-by.
      de: AC-Laden bleibt aktiv zum Laden des Speichers aus anderen AC Quellen für z.b. Wechselrichterkaskaden. Verhindert Stand-by.
render: |
  type: custom
  {{- if eq .usage "grid" }}
  power:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    connectdelay: 1s
    register:
      address: 37113 # Grid import export power
      type: holding
      decode: int32nan
    scale: -1
  energy:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      address: 37121 # Active energy import from the grid
      type: holding
      decode: uint32nan
    scale: 0.01
  currents:
  - source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      address: 37107 # Huawei phase A grid current
      type: holding
      decode: int32nan
    scale: -0.01
  - source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      address: 37109 # Huawei phase B grid current
      type: holding
      decode: int32nan
    scale: -0.01
  - source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      address: 37111 # Huawei phase C grid current
      type: holding
      decode: int32nan
    scale: -0.01
  {{- end }}
  {{- if eq .usage "pv" }}
  power:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    connectdelay: 1s
    register:
      address: 32064 # Input power DC (if no battery in your system - for more precise readings use 32080 # Active generation power AC)
      type: holding
      decode: int32nan
  energy:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      address: 32106 # Accumulated energy yield
      type: holding
      decode: uint32nan
    scale: 0.01
  {{- end }}
  {{- if eq .usage "battery" }}
  power:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    connectdelay: 1s
    register:
      {{- if eq .storageunit "1" }}
      address: 37001
      {{- end }}
      {{- if eq .storageunit "2" }}
      address: 37743
      {{- end }}
      type: holding
      decode: int32nan
    scale: -1
  energy:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      {{- if eq .storageunit "1" }}
      address: 37068 # [Energy storage unit 1] Total discharge
      {{- end }}
      {{- if eq .storageunit "2" }}
      address: 37755 # [Energy storage unit 2] Total discharge
      {{- end }}
      type: holding
      decode: uint32nan
    scale: 0.01
  soc:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      {{- if eq .storageunit "1" }}
      address: 37004
      {{- end }}
      {{- if eq .storageunit "2" }}
      address: 37738
      {{- end }}
      type: holding
      decode: uint16nan
    scale: 0.1
  batterymode:
    source: watchdog
    timeout: 30s
    reset: 1 # reset watchdog on normal
    set:
      source: switch
      switch:
      - case: 1 # normal
        set:
          source: sequence
          set:
          - source: const
            value: 2 # stop
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47086 # battery working mode "Maximaler Eigenverbrauch"
                type: writesingle
                encoding: uint16
          - source: const
            value: {{ .maxdischargepower }} # W
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47077 # maximum discharging power
                type: writemultiple
                encoding: uint32
          {{- if eq .holdaccharging "false" }}
          - source: const
            value: 0 # eisable
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47087 # charge from grid
                type: writesingle
                encoding: uint16
          {{- end }}
      - case: 2 # hold
        set:
          source: sequence
          set:
          - source: const
            value: 0 # W
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47077 # maximum discharging power
                type: writemultiple
                encoding: uint32
          - source: const
            value: 2 # stop
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47086 # battery working mode "Maximaler Eigenverbrauch"
                type: writesingle
                encoding: uint16
      - case: 3 # charge
        set:
          source: sequence
          set:
          - source: const
            value: 5 # charge
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47086 # battery working mode "zeitgesteuertes Laden"
                type: writesingle
                encoding: uint16
          - source: const
            value: {{ .maxdischargepower }} # W
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47077 # maximum discharging power
                type: writemultiple
                encoding: uint32
          - source: const
            value: {{ .powerfromgrid }} # W
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47242 # maximum ac charging power
                type: writemultiple
                encoding: uint32
          {{- if eq .holdaccharging "false" }}
          - source: const
            value: 1 # enable
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47087 # charge from grid
                type: writesingle
                encoding: uint16
          {{- end }}
  capacity: {{ .capacity }} # kWh
  {{- end }}
